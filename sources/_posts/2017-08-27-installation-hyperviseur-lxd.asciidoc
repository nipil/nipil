---
layout: post
title: Installation LXD sur Ubuntu 16.04
---
:toc:
:toc-title: Table des matières

Ce post est un mémo pour l'installation d'un hyperviseur LXD sur un serveur dédié fonctionnant sous Ubuntu Xenial, et utilisant bridge-utils et Shorewall pour la partie réseau.

Beaucoup de temps a passé depuis mon billet sur link:/2013/10/06/conteneurs-lxc-sans-extensions-de-virtualisation.html[les conteneurs LXC] mais au final les choses n'ont pas changé tant que ça, elles se sont surtout simplifiées.

== Paquets système

Les divers outils :

----
sudo apt-get install bridge-utils
sudo apt-get install thin-provisioning-tools
sudo apt-get install shorewall
sudo apt-get install shorewall6
----

On utilise la version `backport` pour la fonctionnalité `network` de LXD :

----
sudo apt-get install -t xenial-backports lxd
----

== Configuration LXD

On initialise avec un backend de stockage `directory` mais c'est juste pour simplifier l'initialisation LXD, on changera ça tout de suite après. :

----
sudo lxd init --auto \
  --storage-backend dir \
  --network-address your_ipv4_address \
  --network-port 12345 \
  --trust-password yourverysecuredpassword
----

On pré-configurera un groupe virtuel `vg`, on définit un nouveau stockage de type LVM qui s'appuie dessus, et on le définit comme stockage dans le profil par défaut :

----
lxc storage create lvm lvm source=vg
lxc profile device remove default root
lxc profile device add default root disk path=/ pool=lvm
----

== Scripts utilitaires

Récuperer les link:https://github.com/nipil/lxd-mgt-tools[scripts de gestion]. Ils servent à gérer les bridge (1 bridge = 1 vlan = 1 dmz) et les fichiers `interfaces` portant leur configuration IP.

== Topologie réseau

Mes hyperviseurs n'ont qu'un adresse IP externe (1 IPv4 + 1 IPv4) et tous les flux transiteront par l'hyperviseur. Celui-ci disposera donc de plusieurs interfaces IP, et un routage interne ainsi qu'un filtrage seront effectués entre celles-ci.

La configuration réseau de l'hyperviseur :

* dans `/etc/network/interfaces`
** l'interface externe `eth0` est définie en statique
** ajouter une ligne `source /etc/network/interfaces.d/*.conf`, si elle n'y est pas,
* dans `/etc/network/interfaces.d/`
** les interfaces des DMZ seront dans les fichiers `/etc/network/interfaces.d/*.conf`

== Routage

Créer l'interface `vlan18` de la DMZ 18 :

----
sudo ./dmz-create.sh 18
----

Voilà le résultat (avec l'adressage utilisé) :

----
35: vlan18: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UNKNOWN group default
    link/ether WW:ZZ:ZZ:ZZ:ZZ:ZZ brd ff:ff:ff:ff:ff:ff
    inet 10.0.18.254/24 brd 10.0.18.255 scope global vlan18
       valid_lft forever preferred_lft forever
    inet6 fd00::12:ffff:ffff:ffff:fffe/64 scope global
       valid_lft forever preferred_lft forever
    inet6 fe80::ZZZZ:ZZff:feZZ:ZZZZ/64 scope link
       valid_lft forever preferred_lft forever
----

On la supprimera avec :

----
sudo ./dmz-delete.sh 18
----

== Firewall

On utilisera le fichier `params` de shorewall/shorewall6 pour définir des _rêgles qui puissent être identiques_ pour les deux parties du firewall (IPv4/IPv6)

J'ai choisi de conserver les configurations réseau dans un dépôt Git, qui sera clôné dans le répertoire `/root` de chaque hyperviseur : on utilisera la même configuration de firewall pour tous les hyperviseurs afin de permettre d'industrialiser l'ajout, ou le remplacement d'hyperviseurs

Les fichiers dans `/etc/shorewall*/` seront en réalité des liens symboliques vers les fichiers de ce dépôt clôné, ce qui permet d'assurer une identité de tous les paramétrages

== Création des VM

Pour créer une VM on a besoin de choisir la DMZ, on affecte un numéro à la VM, et on lui donne un nom. Pour créer la VM "toto" n°24 dans la DMZ 10, on effectuera :

----
./container-create.sh 10 24 toto
----

Ce qui donnera le résultat suivant :

----
+------+---------+-------------------+-----------------------+------------+-----------+
| NAME |  STATE  |       IPV4        |         IPV6          |    TYPE    | SNAPSHOTS |
+------+---------+-------------------+-----------------------+------------+-----------+
| toto | RUNNING | 10.0.10.24 (eth0) | fd00:0:0:a::18 (eth0) | PERSISTENT | 0         |
+------+---------+-------------------+-----------------------+------------+-----------+
----

Les VM LXC pourront être déplacées d'hyperviseur LXD en hypérviseur LXD (facilement à froid) : elles conserveront tous leurs paramètres, et leur configuration réseau

C'est la raison pour laquelle on utilise la même configuration réseau et firewall sur tous les hyperviseurs, ce qui est possible car les accès aux conteneurs sont basés sur du nattage (cf première section)
